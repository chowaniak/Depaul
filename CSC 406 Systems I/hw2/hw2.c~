#include <stdio.h>

//


//1. Convert 0xFEDCBA98 from hex to binary.
// 1111 1110 1101 1100 1011 1010 1001 1000


//2. Convert 10101011 10101010 01010010 10001010 from binary to hex.
// AB AA 52 8A


//3. Convert 0x0000123B from hex to decimal notation.
// (16^3*1)+(16^2*2)+(16^1*3)+(16^0*11)=4096+512+48+11=4667


//4. Convert  11111111  from binary to decimal notation.
// 2^7+2^6+2^5+2^4+2^3+2^2+2^1+2^0=128+64+32+16+8+4+2+1=255



int prob259(int x, int y){
  int xnew = x &0xFF;
  int ynew = y & ~0xFF;

  return (ynew + xnew);
}

unsigned replace_byte(unsigned x, int i, unsigned char b) {
 
  unsigned char*p=((unsigned char*)&x);
  *(p+i)=b;


 return x;
}

int prob261A(int x){

  return (x&&1);
}

int prob261B(int x){
  return (x&&0);
}

int prob261C(int x){
  return ((~x)&&(0xFF)&&0);
}

int leftmost_one(unsigned x){
  // x|=(x>>16);
  x|=(x>>8);
  // x|=(x>>4);
  // x|=(x>>2);
  // x|=(x>>1);
  return (x>>1)+1;
}

int lower_one_mask(int n){
  return 0;
}

int main() {
  // problem 2.59
  printf("\nProblem 2.59:\n");
  int x = 0x89ABCDEF;
  int y = 0x76543210;
  printf("0x%X\n", prob259(x, y));

  // problem 2.60
  printf("\nProblem 2.60:\n");
  printf("0x%X\n", replace_byte(0x12345678, 2, 0xAB));
  printf("0x%X\n", replace_byte(0x12345678, 0, 0xAB));

  // problem 2.61
  printf("\nProblem 2.61:\n");
  printf("%d\n", prob261A(0x8));             // returns 1
  printf("%d\n", prob261B(-1));              // returns 0 
  printf("%d\n", prob261C(0x100));           // returns 0 

  // problem 2.66
  printf("\nProblem 2.66:\n");
  printf("0x%X\n", leftmost_one(0xFF00));
  printf("0x%X\n", leftmost_one(0x6600));

  // problem 2.68
  printf("\nProblem 2.68:\n");
  printf("0x%X\n", lower_one_mask(6));
  printf("0x%X\n", lower_one_mask(17));
  printf("0x%X\n", lower_one_mask(32));
}
